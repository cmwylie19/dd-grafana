apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: metrics-demo
spec: {}
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: approval1
    pepr.dev/controller: "admission-controller"
  name: approval1
  namespace: metrics-demo
spec:
  containers:
  - image: nginx
    name: approval1
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: approval2
    pepr.dev/controller: "admission-controller"
  name: approval2
  namespace: metrics-demo
spec:
  containers:
  - image: nginx
    name: approval1
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: approval3
    pepr.dev/controller: "admission-controller"
  name: approval3
  namespace: metrics-demo
spec:
  initContainers:
  - image: nginx
    name: approval1-init
    command: ["sh","-c","echo 'hi'"]
  containers:
  - image: nginx
    name: approval1
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: denial1
  name: denial1
  namespace: metrics-demo
spec:
  containers:
  - image: nginx
    name: denial1
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: denial2
  name: denial2
  namespace: metrics-demo
spec:
  containers:
  - image: nginx
    name: denial1
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: denial3
  name: denial3
  namespace: metrics-demo
spec:
  initContainers:
  - image: nginx
    name: denial1-init
    command: ["sh","-c","echo 'hi'"]
  containers:
  - image: nginx
    name: denial1
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
